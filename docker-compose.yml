version: '3'
services:

  nodejs:
    build:
      context: .
      dockerfile: ./docker/nodejs/Dockerfile
    container_name: "${DOCKER_PREFIX}-nodejs"
    depends_on:
      - app
    ports:
      - "3000:3000"
    volumes:
      - ./:/var/www
    networks:
      - app-network

  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    image: digitalocean.com/php
    user: root
    container_name: "${DOCKER_PREFIX}-app"
    restart: unless-stopped
    tty: true
    depends_on:
      - db
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php-fpm/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/php-fpm/supervisor-workers.conf:/etc/supervisor/conf.d/supervisor-workers.conf
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: "${DOCKER_PREFIX}-webserver"
    restart: unless-stopped
    tty: true
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/prod.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: "${DOCKER_PREFIX}-db"
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/:/etc/mysql/
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
